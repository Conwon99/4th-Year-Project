
//P=IV

// No load + Power Meter = 0.73A
//Cooker : 0.81A difference => Inverter+Power Meter takes 0.81A


// Inverter consumes 0.44A
// Power meter idle consumes  0.83-0.44 = 
// Cooker Power meter 0.75+0.39A = 1.14A greater than calculated
// 

// Laptop Charger : 32W , 11.58V I = P/V = 32/11.58 = 2.76A  Fluctuations between 30W-35W
// Measured = 3.2A
// Difference = 0.44

// Reading Variables
int NumberofReadings = 0;
bool AverageTaken = false;


// ACS712 Current Sensor variables
const int Iout_pin = 36;
float offsetVoltage = 2.46;
double Iout = 0;
float sensitivity = 0.1;  //int sensitivity = 0.1; //100mV/A
float Inverteroffset = 0.81;
volatile double Iout_voltage;
volatile double sum_Iout_voltage=0;
double avg_Iout_voltage;


// Voltage Divider variables
const int Vdiv_pin= 34;
double R1 = 99600.0;
double R2=  5060;
double Resistor_ratio;
double Vbat = 0;
volatile double Vdiv_voltage;
volatile double sum_Vdiv_voltage=0;
double avg_Vdiv_voltage;

double power;



double ReadVoltage(byte pin){
  double reading = analogRead(pin); // Reference voltage is 3v3 so maximum reading is 3v3 = 4095 in range 0 to 4095
  if(reading < 1 || reading > 4095) return 0;
   //return -0.000000000009824 * pow(reading,3) + 0.000000016557283 * pow(reading,2) + 0.000854596860691 * reading + 0.065440348345433;
  return (-0.000000000000016 * pow(reading,4) + 0.000000000118171 * pow(reading,3)- 0.000000301211691 * pow(reading,2)+ 0.001109019271794 * reading + 0.034143524634089)+0.005;
} 




hw_timer_t * timer = NULL;

void IRAM_ATTR onTimer(){


 if (AverageTaken == true)
    {
      //NumberofReadings = 0;
      sum_Iout_voltage =0;
      sum_Vdiv_voltage =0;
      AverageTaken = false;
      
    }



    Vdiv_voltage = ReadVoltage(Vdiv_pin);
    sum_Vdiv_voltage += Vdiv_voltage;

    Iout_voltage = ReadVoltage(Iout_pin) -offsetVoltage;
    sum_Iout_voltage += Iout_voltage;

   //Serial.print("Iout_voltage = ");
   // Serial.println(Iout_voltage);
//
//    Serial.print("Vdiv_ADC = ");
//    Serial.println(Vdiv_ADC);

    NumberofReadings++;
}


void setup(void) 
{
  Serial.begin(9600); 


  Resistor_ratio = R2/(R2+R1);

  timer = timerBegin(0, 80, true);

  /* Attach onTimer function to our timer */
  timerAttachInterrupt(timer, &onTimer, true);

  /* Set alarm to call onTimer function every second 1 tick is 1us
  => 1 second is 1000000us */
  /* Repeat the alarm (third parameter) */
  timerAlarmWrite(timer, 200000, true);    // every 0.2s

  /* Start an alarm */
  timerAlarmEnable(timer);


}

void loop(void) 
{

//int16_t current_adc1 = ads.readADC_SingleEnded(1); // ADC Reading for Current

if (NumberofReadings >= 5 && AverageTaken == false)
{ 
  AverageTaken =true;
  
   // get average adc voltage values 
   avg_Vdiv_voltage = sum_Vdiv_voltage/NumberofReadings;
   Vbat = avg_Vdiv_voltage/Resistor_ratio;

   avg_Iout_voltage = sum_Iout_voltage/NumberofReadings;
   Iout = (Iout_voltage/sensitivity);// - Inverteroffset;

   if (Iout >0.3)
   {
    Iout = Iout - Inverteroffset;
    
   }
   else if (Iout <0.3)
   {
    Iout= 0.0;
    
   }
   
   power = Iout*Vbat;

Serial.print("avg_Vdiv_voltage = ");
Serial.println(avg_Vdiv_voltage,7);

Serial.print("Vbat = ");
Serial.println(Vbat);

Serial.print("avg_Iout_voltage = ");
Serial.println(avg_Iout_voltage,7);

Serial.print("Iout = ");
Serial.println(Iout);

Serial.print("Power = ");
Serial.println(power);

Serial.print("NumReadings = ");
Serial.println(NumberofReadings);

Serial.println();
Serial.println();


NumberofReadings = 0;
}
}
